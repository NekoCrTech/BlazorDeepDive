@inject NavigationManager NavigationManager

@if(this.servers !=null && this.servers.Count >0)
{
    <ul>
        <Virtualize Items="@this.servers" Context="server">
            <li @key="server.Id">
                @server.Name in @server.City is
                <span style="color:@((server.IsOnline ? "green" : "red"))">
                    @(server.IsOnline ? "online" : "offline")
                </span>
                &nbsp;
                <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
                &nbsp;
                <EditForm Model="server"
                          FormName="@($"form-server-{server.Id}")"
                          OnValidSubmit="@(() => {DeleteServer(server.Id);})">
                    <button type="submit" class="btn btn-primary">Delete</button>
                </EditForm>


            </li>
        </Virtualize>
    </ul>
}


@code {

    [Parameter]
    public string? CityName { get; set; }

    private List<Server>? servers; 

    protected override void OnParametersSet()
    {
        servers = ServersRepository.GetServersByCity(CityName??"Toronto");
    }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/Servers", true);
        }
    }

}
