@page "/server/{Id:int?}"

@inject NavigationManager NavigationManager

@if (Id.HasValue)
{
    <h3>Add Server</h3>
    <br />
    <br />
}
else
{
    <h3>Edit Server</h3>
    <br />
    <br />
}

@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        @if(server.Id > 0 )
        {
            <InputNumber @bind-Value="server.Id" hidden></InputNumber>
        }

        

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </Control>
            <ValidationControl>
                <ValidationMessage For="@(() => server.Name)"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </Control>
            <ValidationControl>
                <ValidationMessage For="@(() => server.City)"></ValidationMessage>
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="Online Status">
            <Control>
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </Control>
        </FieldComponent>

        <br />

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <br />

        @if (server.Id > 0)
        {
            <button class="btn btn-primary" type="submit">Update</button>
        }
        else
        {
            <button class="btn btn-primary" type="submit">Save</button>
        }

        
        &nbsp;
        <a href="/Servers" class="btn btn-primary">Close</a>

    </EditForm>
}


@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        if(this.Id.HasValue)
        {
            // Edit mode
            server ??= ServersRepository.GetServerById(this.Id.Value);
        }
        else
        {
            // Add mode
            server ??= new Server() { IsOnline = false };
        }
    }

    private void Submit()
    {
        if (server != null)
        {
            if (this.Id.HasValue)
            {
                ServersRepository.UpdateServer(server.Id, server);
            }
            else
            {
                ServersRepository.AddServer(server);
            }
        }
        NavigationManager.NavigateTo($"/Servers/back_from/{this.server?.City}");
    }
}   
