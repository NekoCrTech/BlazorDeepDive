@page "/Servers"
@page "/Servers/back_from/{CityName}"

@using serverManagement2.StateStore

@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject TorontoOnlineServersStore TorontoOnlineServersStore

<h3>Servers</h3>
<br />
<br />

@*------------ City Cards -------------*@

<CityListComponent 
    @ref="cityListComponent"
    OnCitySelected="HandleCitySelection"
    SelectedCity="@this.selectedCity">
</CityListComponent>

<br />

@*------------ Search Bar -------------*@

<SearchComponent 
    @ref="searchComponent"
    OnSearchPressed="HandleSearch"></SearchComponent>


@*------------ Server List -------------*@
<CascadingValue Name="SelectedCity" Value="this.selectedCity">
    <ServerListComponent 
        @rendermode="InteractiveServer" 
        CityName="@this.selectedCity"
        SearchFilter="@this.searchFilter">
    </ServerListComponent>
</CascadingValue>



@*------------ Add Server -------------*@
<p>
    <a href="/servername" class="btn btn-primary">Add Server</a>
</p>


@code {
    [Parameter]
    public string? CityName { get; set; }

    private string selectedCity = "Toronto";
    private string searchFilter = "";

    private CityListComponent? cityListComponent;
    private SearchComponent? searchComponent;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (NavigationManager.Uri.Contains("back_from") 
            && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;

                StateHasChanged();
            }

            var serversToronto = ServersRepository.GetServersByCity("Toronto");
            if (serversToronto is not null)
            {
                TorontoOnlineServersStore.SetNumberServersOnline(serversToronto.Count(x => x.IsOnline));
            }
        }
    }

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        this.searchFilter = string.Empty;
        searchComponent?.ClearSearch();
    }

    private void HandleSearch(string filterSearch)
    {
        this.searchFilter = filterSearch;

        cityListComponent?.ClearSelection();
    }
}
