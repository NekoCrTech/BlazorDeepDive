@page "/Servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br>
<br>

@*------------ City Cards -------------*@

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase)?"border-primary":"")">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick=@(() => { selectCity(city); })>@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<br />

@*------------ Search Bar -------------*@

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Servers" 
        @bind-value="serverFilter"
        @bind-value:event="oninput" />
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>


@*------------ Server List -------------*@

<ServerListComponent 
    @rendermode="InteractiveServer" 
    CityName=@this.selectedCity>
</ServerListComponent>




<p>
    <a href="/Servers/Add" class="btn btn-primary">Add Server</a>
</p>


@code {

    private List<String> cities = CitiesRepository.GetCities();

    private string selectedCity = "Toronto";

    private string _serverFilter = "";
    private string serverFilter
    {
        get => _serverFilter;
        set
        {
            _serverFilter = value;
            // this.servers = ServersRepository.SearchServers(_serverFilter);
        }
    }

    private void selectCity(string cityName)
    {
        if (!String.IsNullOrEmpty(cityName))
        {
            this.selectedCity = cityName;

            // this.servers = ServersRepository.GetServersByCity(this.selectedCity);
        }
    }

    private void HandleSearch()
    {
        // this.servers = ServersRepository.SearchServers(serverFilter);
        this.selectedCity = string.Empty;
    }

}
